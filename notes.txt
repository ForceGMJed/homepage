=========routers=================

more ways from a to b

=======TCP/IP=======

----IP:

INTERNET PROTOCOL

GRAB HAND SHAKE => GRAB HAND SHAKE RESPONSE

UNIQUE ADDRESS!

0-255
#.#.#.#  this is ipv4!!!!!!!!!!!!!
EACH COMPUTER!

so around 2^32 amount of computers can simultaneously exist! 4B!

ipv6 is 128 bytes wide !!!!! 


---tcp

transmission control protocol

80  HTTP
443 HTTPS

website?

requesing homepage?

targetIP address:port

443 is a web page transmission

other TCP like minecraft: 25565 

a pc can receive/sent a lot of transmission through different ports! SIMULTANEOUSLY!

What about video, media files????

also many ppl can download things at the same time

-=---=-=-=---=---=-=-=-=-=-=-=-=-
example:

someone uploading a pic to a website

break pic into 4 pieces

send them one by one as a packet

router could drop packet,

if webpage recieve 1/4,3/4 and 4/4 it will request a resend of 2/4


 
====DNS=====


domain name system!

server on internet to convert domain names to ip address!

router also have local

it stores frequently  browsed website's ip address to avoid traffic 


=======HTTP=========

BROWSER AUTO COMPLETE

hyper text transfer protocol

tcp/ip low level plumping

http is application level

<ROOT OF THE SERVER>/<path>

<ROOT OF THE SERVER>/<folder>/<file>


https://www.example.com/folder/file.html


=====TLDs, top level domain======

.com => commerical
.edu 
.gov
.net => network

===CCTLDS===
country codes TLDs

.uk
.jp


cs50.io

tld .io lets anyone use it if u pay for etc


http :  protocol/scheme

www : host name( not a requirement, super common convention)



------http being a protocol-------
(BRIANS WEB SERVER)
(STHYLIAS USER)

GET: DOWNLOAD FROM SERVER

POST : UPLOAD TO SERVER



STHLYAS will send this packet:

GET/HTTP/1.1
Host: www.example.com




===curl==

connect url:

show headers
no images


example:

$ curl -I https://www.harvard.edu/
HTTP/2 200 
cache-control: public, max-age=1200
content-type: text/html; charset=UTF-8
link: <https://www.harvard.edu/>; rel=shortlink
permissions-policy: geolocation=(self)
referrer-policy: no-referrer-when-downgrade
server: nginx
strict-transport-security: max-age=31622400
x-content-type-options: nosniff
x-frame-options: SAMEORIGIN
x-pantheon-styx-hostname: styx-fe1-a-7b645b554f-jkcwx
x-pingback: https://www.harvard.edu/xmlrpc.php
x-styx-req-id: 20b79673-1698-11ee-87c6-065d82124324
x-xss-protection: 1; mode=block
age: 595
accept-ranges: bytes
via: 1.1 varnish, 1.1 varnish, 1.1 varnish, 1.1 varnish
date: Thu, 29 Jun 2023 16:25:08 GMT
x-served-by: cache-chi-klot8100144-CHI, cache-qpg1273-QPG, cache-qpg1237-QPG, cache-qpg1227-QPG
x-cache: HIT, HIT, MISS, MISS
x-cache-hits: 13, 1, 0, 0
x-timer: S1688055909.861737,VS0,VE110
vary: Accept-Encoding, Cookie, Cookie, orig-host
content-length: 219030



200 means the website returned ok
301 means error => redirect!
404 means NOT FOUND

302 found
304 not modified
307 temp redirect
500 interal server error
403 forbidden
503 server unavailable
------

example outward packet:

GET /search?q=cats HTTP/1.1
Host: www.google.com
...


/search is path of the webpage

HTTP/1.1 is the version of http

?q=<userinput>



=====HTML========

TAGS

ATTRIBUTE



cs50:

run http-server

launch current codespace html file into a webpage

server runs requests and give responds!

https://forcegmjed-super-space-adventure-ggwv
j4xpr5rfpvj9-8080.preview.app.github.dev/hello.html

/hello.html is a file on the domain :

forcegmjed-super-space-adventure-ggwv
j4xpr5rfpvj9-8080.preview.app.github.dev


---source code-----


<!DOCTYPE html>
//must include this for html files


<html lang="en">//used for search engine optimisation or translate website tools

    <head>//head element
        <title> //TAB NAME SHOWN ON TAB
            Hello, title
        </title>
    </head>
    <body>// body element  95% OF eeverything else
        hello,body
    </body>



</html>




javascript will add html elements  (like c# handles the logic/ui connection between backend and 
UXML)

----break----

    <body>
            random nonsense
            <br><br>
            random nonsense
            <br><br>
            random nonsense
            <br><br>
    </body>




<br> is break, "Enter"


no need to close this tag!

-----paragraph----

        <p>
            random nonsense
        </p>-0 


more example on paragraph.html

=====tag value pairs=====
<video autoplay loop muted width="1280">

on the <xx> tag, can use predefined key value pairs as arguements

some keys dont have values



==========meta tags===========

    <head>
        <meta name ="viewport" content = "initial-scale = 1, width = device-width">
        <title> _header  </title>
    </head>


this will tell the html to draw with respect to the device width to target mobile device

=======SEARCHIN========

form tag

-web form
textbox, buttons.. 


inside body


        <form action = "https://www.google.com/search">
//action key in form tag here means go to google and input what ever user input into
// the search box and submit button will trigger the google search 
            
            <input name = "q" type = "search">
            <input type = "Submit"> !!!!!!! THIS ONE HAS TO BE SUBMIT!!!! REMEMBER 

THESE ARE KEY VALUE PAIRS!!
        </form>

--------
 <input type = "Submit">
 <button type = "submit"> SUBMMMMMMMMMMMMMMMIT </button>

THESE 2 attribute under form will also create a button that accepts input 
but the latter will have a custom text field on the button 
the button will say submmmmmmmmmmmmmmmit instead of just default Submit

----------------INSPECT-----------------

can see html code for the visual elements 

changing html inside browswer will only change ur local html not the servers

accessing the url means requesting a webpage ui/logic response from the web server

=====css=======


PROPERTIES

type selector
class selector
ID selector
attribute selector

<style> tag

</style>


or a <link> tag which links to a secondary file of css

or link to 3rd party librarys! to use their api to implement things fast




copy right simbol?

&#169; for copy right (c) suymbols



<div> a big rectanglur region




       <div style = " text-align: center;">
            <h1>Biggest heading</h1>

            <div style="font-size: large;">
                Gg son
            </div>

            <h2>Smaller Heading</h2>
            <div style="font-size: medium;">
                welcome to the jungle
            </div>

            <div style="font-size: small;">
                coprigtht &#169; ggson 1999
            </div>

        </div>


AND THJIS:

        <div style = " text-align: center;">
            <h1>Biggest heading</h1>

            <p style="font-size: large;">
                Gg son
            </p>

            <h2>Smaller Heading</h2>
            <p style="font-size: medium;">
                welcome to the jungle
            </p>

            <p style="font-size: small;">
                coprigtht &#169; ggson 1999
            </p>

        </div>


the built in gaps between paragraphs are gone!

-can also do style in body tag! it applys to every child under hierarachy.



        <div style = " text-align: center;">

            <header style="font-size: large;">
                Gg son
            </header>

            <main style="font-size: medium;">
                welcome to the jungle
            </main>

            <footer style="font-size: small;">
                coprigtht &#169; ggson 1999
            </footer>

        </div>


same thing above just if AI want to access header/main they can refer 
to these tags



decouple css and html!!!


do <style> inside HEAD! so that style is loaded into memory before everything else

    <head>

        <style>

            body{
                text-align: center;
            }

            header{
                font-size:large;
            }
            main{
                font-size:medium;
            }
            footer{
                font-size: small;
            }


        </style>

        <title>home</title>
    </head>


calling the body tag will apply the respective style



^^^^^^THIS IS NOT REUSEABLE ! unless keep using the same tag!

these are TYPE selectors! it affect the entire type! like a button type in ui builder
but ONLY in that project


======class selectors=======

reuseable in MULTIPLE PROJECTS!


            .centered{
                text-align: center;
            }

            .large{
                font-size:large;
            }
            .medium{
                font-size:medium;
            }
            .small{
                font-size: small;
            }


can use them like this:

        <div class = "centered">

            <div class = "large">
                GGGGGGGGGGGGGSON
            </div>

            <div class = "medium">
                welcome to the jungle
            </div>

            <div class = "small">
                coprigtht &#169; ggson 1999
            </div>

        </div>


---using link to decouple all css/ aethestic from html\
--- similar to import a css file/library from somewhere in the directory

do:

<head>

	<link href = "styles.css" rel = "stylesheet">


</head>



must have a .css file call styles in the same directory

========frameworks=========

third party css files

use the <link> attribute again!

use BOOTRAP and read their documentation

example:

<table class = "table table-striped>


creates a nice table for the table attribute with striped rows and better spacing


... many more
=========JAVASSCIPT==========



     <form>
            <input autocomplete="off", autofocus placeholder="GGG?" type = "text">
            <button type = "submit"> Greeeeeeeet </button>
     </form>


a input field is created with placeholder text ggg? 

also a custom button is set to accept the input text and a UI text of GREEEEEEEET


EVENTS can listen for using java script!


anything that happens on the input field in <form> can be listen to! and inmplement functionanlity

blur 
change
click
drag
focus
keyup
load
mousedown
mouseover
mouseup
submit
touchmove
unload
...........
add event listner in the form tag:

<head>
	<script>
		function greet()
		{
 			let name = document.querySelector("#name").value
			alert('hello, world');
		}
	</script>
</head>


     <form onsubmit="greet()"; return false; >
            <input autocomplete="off", autofocus id="name" placeholder="GGG?" type = "text">
            <button type = "submit"> Greeeeeeeet </button>
     </form>


return false here browser will not submit the form

set autofocus id = "name"

let name = document.querySelector("#name").value

means the uniquely selecting the id:name and getting its value

without using html tags:

        <script>
           document.querySelector('form').addEventListener("submit",function(e) {
               let name = document.querySelector("#name").value
               alert('Hello, ' + name);
               e.preventDefault();
           });
        </script>

...


        <form>
            <input autocomplete="off", autofocus id="name" placeholder="GGG?" type = "text">
            <button type = "submit"> Greeeeeeeet </button>
        </form>



THIS WILL HAVE PROBLEM BECAUSE THE VISUAL ELEMENT in <form> has NOT been initialisedd!

        <form>
            <input autocomplete="off", autofocus id="name" placeholder="GGG?" type = "text">
            <button type = "submit"> Greeeeeeeet </button>
        </form>


          <script>
            document.querySelector('form').addEventListener("submit",function(e) {
                let name = document.querySelector("#name").value
                alert('Hello, ' + name);
                e.preventDefault();
            });
         </script>





^^^^^^^^^^^^^^^^^^^^^^^^^^^
JUST PUT THE SCRIPT AFTER !!



OR use a call back when visual elmenets are initailsied:



         <script>
           //USE A CALL BACK EVENT WHEN HTML IS INITALIISED!

           document.addEventListener("DOMContentLoaded", function(){

               document.querySelector('form').addEventListener("submit", function(e) {
                   let name = document.querySelector("#name").value
                   alert('Hello, ' + name);
                   e.preventDefault();
               });
           });

        </script>


==== decouple JS and html!=====

DO:


<script src = "hello.js"></script>


and put all the <script> block inside the hello.js file IN THE SAME 
DIRECTORY!!!!







=====DYNAMIC VISUAL ELEMENT UPDATE?=========

listen to KEY  DOWN/ UP EVENTS!!!!!


         <Script>


            document.addEventListener("DOMContentLoaded", function(){

            let input = document.querySelector("input");
                input.addEventListener("keyup", function(e) {
                    let name = document.querySelector("p");
                    if (input.value){
                        name.innerHTML = `hello, ${input.value}`;
                    }
                    else{
                        name.innerHTML = `WHAT IS UR NAME?`;
                    }
                });
            });

         </Script>

The INPUT selector select the first<input> tag down the html
THE P selector select the first <p> tag down the html


`hello, ${input.value}` is used to put variables inside a string:

s = `string var: ${_stringVar}`


name.innerHTML is the html inside the visual element variable "name",
since name is populated by a paragraph VE, innerHTML is the text of the <p>

======================


document.querySelector("#X").value

select the tag that has key: autofocus id="name"
#X means "has an id of X"

--------VS-------


document.querySelector("X").value

select the tag that is call X:

<X>
</X>

===BLINKING ve====

function blink()
{

if(<VE>.style.visibility = "hidden")
{
	<VE>.style.visibility = "visible"
}

else
{
	<VE>.style.visibility = "hidden"
}

}

window.setInterval(blink,500); => invoke(func,delay) in unity




=============PS8=================


<button class="MCButton" onclick="CheckButtonAnswer(event,'AAA')">Order69</button>

can pass more arg than the event arg from onclick event, but the first arg MUST BE the event object!



-------parseInt()--------

function CheckButtonAnswer(event,questionNumber)
{
    var _questionNum = parseInt(questionNumber)-1;
    alert("questionNumber: " + parseInt(_questionNum+1)  + ". Answer: " + ansArray[_questionNum]);
}

//parseInt here will force the + sign to do arithmetic but not concatonate

====finding the specific button===

 <button class="MCButton" name ="A" onclick="CheckButtonAnswer(event,'1','A')">Order29</button>

alert("event.target.name " + event.target.name);

event.target.name here returns 'A'!!!!!

-----htmlElement.children------

each event arg passed in the event is ALSO AN OBJ!
each htmlElement is an OBJ!
each style from each html element is also an obj!

var childList = parentElement.children;
//returns the childlist as HTML COLLECTION object

    for(var i=0; i< childList.length; i++)
    {
        var item = childList.item(i);


//to access the html collection, must use htmlCollect.item(index)!!!!!!!!!!!!!!

HTML COLLECTION IS NOT THE SAME AS NODELIST!@!@!!!!!!!!!!!!!!



====chaing the color of a button using js--------

item.style.background = "Green";

//this also works! using hex:

item.style.background = "#cce7ff"


====substring====

   var questionNum = parentElement.id.substring(3)

substring(3) means omit the first 3 chars and keep the rest


substring(1,4) means keep the the characters between the 1th and 4 location, 1 inclusive 4 exslusive.



-------onsubmit---------


RETURN FALSE IN ONSUBMIT EVENT TO PREVENT AUTO REFRESH OF THE PAGE WTF!!!!!!!!!!!!!!!!!!!!!!

 <form id="LQ-3" onsubmit="CheckLQAnswer(event); return false;">




============HOMEPAGE============
 page layout:

        1) index.html :

        find fummy mirror selfie:then look at self intro templates; Neo Lee Academic tutor and aspiring game dev

        contact me under selfie

        email:

        insta(icon+url)      facebook(icon+url)       discord(icon+url)      steam(icon+url)      github(icon+url)



        name
        country
        hobbies:
        what am i currently doing

        I despise make one thing or person as my "favorite" as it underwhelms all the others things i like equally so
        here is a list of my favorite things and people:
        (show icons in random readable orientation)

        sungha, federer, stevie ray vaughen, sw, cw, Neo, Obiwan,
        farrady, max plank, sch eqt, field eqt, dire straits,
        l4d2, vermintide2, minevraft, lis, gtaV, rdr2, cod mw2 2009,
        lego starwars, eric clapton, maroon5,  BSB, friends, the big bang theory,tennis, guitar,
	TERRARIA, cat(bambi),somboon thai noodlesss


        2) Exp & Skills

        degree
        language:
        programming languages:
        creative media tools:


use list here


        3) Game porfolio
        Lastest game release: TAE ,show url to steam store page
        older games: screenshot of Snake,  shit temple run game, platformer-shit, brackeys first game

        under dev: NGNG

        4) life Achievements

        hobbies: tennis music
        music: show pic winning music festival on classical guitar +  mark sheet
        tennis: show pic from jackeys phone




========reference html elements============

document is the rootHTMLOBJ! liuke documentRoot in uxml.

1)

htmlObj.getElementsByTagName(_tagNAme)

returns a list of html that has _tagName.


2)

<h1 class="gfg1" id="g2">GeeksforGeeks sample 2</h1>

temp = document.querySelector(".gfg1");	
returns the first html selected with css class:  	 gfg1
 
temp = document.querySelector("#g2");
returns the first html selected with css class id:	 g2
 

temp = document.querySelectorAll("h1.gfg1#g2");
returns the first html selected with tag h1 and class gtg1 and id g2.!!!
 
------------------------------------

display: block 

block display mode means treat it like a div( or a standalone block)
inline mode => cannot change any height or width of it
inline-block mode : put text and img in the same line!

<p style="display:inline-block;">

--------------------

ctrl shift h is select all occurances and replace with 

-----------


.dynamicFavList {
    display: grid;
    gap: 1em;
    grid-template-columns: repeat(10, 1fr);
}


@media(min-width: 10em) {
    .dynamicFavList {
        grid-template-columns: repeat(2, 1fr);
    }
}

@media(min-width: 20em) {
    .dynamicFavList {
        grid-template-columns: repeat(3, 1fr);
    }
}

@media(min-width: 40em) {
    .dynamicFavList {
        grid-template-columns: repeat(5, 1fr);
    }
}

using @media the current width of the page can be detected!
and update the inherited class css




------------------

// Returns a random integer from 0 to 99:
Math.floor(Math.random() * 100);

// returns A RANDOM INTERGER FROM -1 TO 1[
Math.round(Math.random()) * 2 - 1


CONCATENATE STRINGS because paddingtop requires a string as field
 _img.style.paddingTop = rndPadtop.toString() + "%" ;



-------------


var fs = require('fs');
var files = fs.readdirSync('/assets/photos/');


require is like using in unity,


Module	Description
assert	Provides a set of assertion tests
buffer	To handle binary data
child_process	To run a child process
cluster	To split a single Node process into multiple processes
crypto	To handle OpenSSL cryptographic functions
dgram	Provides implementation of UDP datagram sockets
dns	To do DNS lookups and name resolution functions
domain	Deprecated. To handle unhandled errors
events	To handle events
fs	To handle the file system



after requring a lib, variable fs can access all methods inside lib "fs"


<script data-main="scripts/homepage" src="scripts/require.js"></script>
<script>alert("sdas")</script>

//here require.js is loaded first then homepage is loaded, but during the loading of these 2 files,
alert("asad") is also asynchorously executed.


IF USING REQUIRE.js, THE DOM CONTENT LOADED event will fire before 
anything can subscribe to it:

USE THE domReady.js and do:




-------fu8ck require=-====-=-=-=

-----array mani--------

// generate 30 elements with "00" to "29"

function generateMaxSizeArray() {
    for (var i = 0; i < maxFavItems; i++) {
        iconNameArr[i] = i.toString();
        console.log("The OG arry: " + `${iconNameArr}`);
    }
}

-===========SPLICE=========

//splice(targetIndex, remove all consecutive n index from target index)
var n = iconNameArr.splice(randomIndex,1);




----open url in new tab-----

   <a href="https://www.youtube.com/watch?v=cI6aFO8svqA&ab_channel=RealScience" target="_blank"
                    rel="noopener noreferrer">
                        <img class="contactMe_icons contactMeButton" src="/photos/insta.png" alt="selfie here">
                    </a>  

//put image inside anchor tag, set :hover tags and :select tags for that image class,
//creates a hyperlink button

//target = _blank opens href in new tab! , theres more choices in doc











-----@MEDIA---------



// ALWAYS USE THIS TO OVERRIDE CERTIAN CSS BEHAVIOURS FOR SMALLER DEVICES!!!!!!!!!


@media(min-width: 650px) {

    .favItems {
        width: 100px;
    }

    .basicInfoContainer {
        width: 80%;
    }

}

@media(min-width: 950px) {

    .name{
        font-size :30px;
    
    }
    .job{
        font-size :19px;
        
    }
    .email{
    
        font-size :17px;
    }
}


@media(min-width: 1000px) {
    .dynamicFavList {
        grid-template-columns: repeat(1, 1fr);
    }

    .topButton {
        font-size: 13px;
    }

    .basicInfoContainer {
        width: 50%;
    }

}


@media(min-width: 1450px) {
    .dynamicFavList {
        grid-template-columns: repeat(2, 1fr);
    }

    .topButton {
        font-size: 20px;
    }

    .dynamicList {
        width: 25%;
    }

    .middleTextHome {
        width: 50%;
    }

    .name{
        font-size :32px;
    
    }
    .job{
        font-size :20px;
        
    }
    .email{
    
        font-size :19px;
    }

}


-----dont use align items center for background div

THE BACKGROUND COLOR WILL NOT COVER THE ENTIRE FLEX BOX!

